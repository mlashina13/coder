import * as yup from 'yup';

/** схема валидации формы изменения данных пользователя */
export const userDataValidationSchema = yup.object({
  email: yup
    .string()
    /** проверка через регулярное выражение электронной почты */
    .matches(/^([\w.-])+@([\w.-])+\.([A-Za-z]{2,4})$/, {
      message: 'Почта должна быть написана на латинице, допускаются цифры и спецсимволы',
    })
    /** указываем на обязательность электронной почты */
    .required('Введите e-mail'),
  first_name: yup
    .string()
    /** проверка через регулярное выражение имени */
    .matches(/^[А-ЯA-Z][a-zа-я-]{1,20}$/g, {
      message:
        'Имя должно быть написано на латинице или кириллице, первая буква заглавная, без цифр и спецсимволов',
    })
    /** указываем на обязательность имени */
    .required('Введите имя'),
  second_name: yup
    .string()
    /** проверка через регулярное выражение фамилии */
    .matches(/^[А-ЯA-Z][a-zа-я-]{1,20}$/g, {
      message:
        'Фамилия должна быть написана на латинице или кириллице, первая буква заглавная, без цифр и спецсимволов',
    })
    /** указываем на обязательность фамилии */
    .required('Введите фамилию'),
  phone: yup
    .string()
    /** проверка через регулярное выражение телефона */
    .matches(/^((8|\+7)[-]?)?(\(?\d{3}\)?[-]?)?[\d-]{7,10}$/, {
      message:
        'Телефон должен быть от 10 до 15 символов, состоять из цифр, может начинается с плюса',
    })
    /** указываем на обязательность телефона */
    .required('Введите телефон'),
});
